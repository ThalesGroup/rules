# This Containerfile packages the python poetry app falco_mitre_checker

################################################################################
# Usefull Variables

# Set Python Version
ARG PYTHON_VERSION="3.10.12"

# Python container image
ARG BASE_REGISTRY="docker.io/library"
ARG BASE_IMAGE="python"
ARG BASE_IMAGE_TAG="${PYTHON_VERSION}-slim-bullseye"

# Location of the app files and users
ARG APP_USER="poetryuser"
ARG APP_USER_UID="1234"
ARG APP_GROUP="poetrygroup"
ARG APP_GROUP_GID="5678"
ARG HOME_DIR="/home/${APP_USER}"
ARG APP_DIR="${HOME_DIR}/falco-mitre-checker"

# Set poetry version
ARG POETRY_VERSION="1.2.2"
# POETRY_HOME should be on the PATH
ARG POETRY_HOME=${HOME_DIR}/poetry

################################################################################
# python base image from https://hub.docker.com/_/python .
FROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_IMAGE_TAG} AS python-base

ENV PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1

################################################################################
# Create an image with poetry and pytest installed.
# https://python-poetry.org/docs/#installing-with-the-official-installer
FROM python-base as poetry

# are defined above
ARG APP_USER
ARG APP_GROUP
ARG APP_USER_UID
ARG APP_GROUP_GID
ARG POETRY_VERSION
ARG POETRY_HOME
ARG HOME_DIR

# Install curl
RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive \
 apt-get install -q -y --no-install-recommends curl

# create a non-root user since this app does not need root privileges
RUN addgroup \
    --gid ${APP_GROUP_GID} \
    ${APP_GROUP} \
 && adduser \
    --uid ${APP_USER_UID} \
    --gid ${APP_GROUP_GID} \
    --shell /bin/bash \
    --disabled-login \
    --disabled-password \
    --gecos "User for poetry app" \
    ${APP_USER}

# use non-root user to install poetry
USER ${APP_USER}

WORKDIR ${POETRY_HOME}

# Set poetry parameters
ENV POETRY_VERSION=${POETRY_VERSION} \
    POETRY_HOME=${POETRY_HOME}

# Install poeatry from the official installer knowing that you have set POETRY_VERSION
RUN curl -sSL https://install.python-poetry.org |  python3 -

# Put poetry in the linux PATH
ENV PATH="$PATH:${POETRY_HOME}/bin"

# Update pip
ENV PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1

RUN pip install --no-cache-dir --upgrade pip

# Put pip tools in the PATH
ENV PATH="$PATH:${HOME_DIR}/.local/bin"

# Uninstall curl because this container does not need it
USER root

RUN apt purge -y curl

USER ${APP_USER}

################################################################################
# Install python falco_mitre_checker app
FROM poetry as mitre_checker_app

# are defined above
ARG APP_DIR
ARG APP_USER
ARG APP_GROUP
ARG POETRY_HOME
ARG HOME_DIR

# use non-root user
USER ${APP_USER}

# create useful folders
RUN mkdir -p ${APP_DIR}

# Copy all relevant python and poetry files
WORKDIR ${APP_DIR}
COPY --chown=${APP_USER}:${APP_GROUP} . .

# Run the build and install scripts
RUN ./build.sh

RUN ./install.sh

################################################################################
# Final image
FROM mitre_checker_app as final

# PROJECT_DIR and APP_DIR are defined above
ARG APP_DIR
ARG APP_USER

# use non-root user
USER ${APP_USER}

WORKDIR ${APP_DIR}

ENTRYPOINT [ "python", "-m", "falco_mitre_checker"]

# See https://github.com/opencontainers/image-spec/blob/main/annotations.md
ARG LABEL_CREATED=""
ARG LABEL_AUTHOR=""
ARG LABEL_URL=""
ARG LABEL_DOCUMENTATION=""
ARG LABEL_SOURCE=""
ARG LABEL_VERSION=""
ARG LABEL_REVISION=""
ARG LABEL_VENDOR=""
ARG LABEL_LICENSES="Apache-2.0"
ARG LABEL_TITLE=""
ARG LABEL_REF_NAME=""
ARG LABEL_DESCRIPTION="Usage: $ alias falco_mitre_checker='podman run --rm --interactive --security-opt label=disable --volume "${PWD}":/pwd --workdir /pwd localhost/falco-mitre-checker:stable'"
ARG LABEL_BASE_DIGEST=""
ARG BASE_REGISTRY
ARG BASE_IMAGE
ARG BASE_IMAGE_TAG
LABEL org.opencontainers.image.created="${LABEL_CREATED}"
LABEL org.opencontainers.image.authors="${LABEL_AUTHOR}"
LABEL org.opencontainers.image.url="${LABEL_URL}"
LABEL org.opencontainers.image.documentation="${LABEL_DOCUMENTATION}"
LABEL org.opencontainers.image.source="${LABEL_SOURCE}"
LABEL org.opencontainers.image.version="${LABEL_VERSION}"
LABEL org.opencontainers.image.revision="${LABEL_REVISION}"
LABEL org.opencontainers.image.vendor="${LABEL_VENDOR}"
LABEL org.opencontainers.image.licenses="${LABEL_LICENSES}"
LABEL org.opencontainers.image.title="${LABEL_TITLE}"
LABEL org.opencontainers.image.ref.name="${LABEL_REF_NAME}"
LABEL org.opencontainers.image.description="${LABEL_DESCRIPTION}"
LABEL org.opencontainers.image.base.digest="${LABEL_BASE_DIGEST}"
LABEL org.opencontainers.image.base.name="${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_IMAGE_TAG}"